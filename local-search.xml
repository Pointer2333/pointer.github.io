<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>舞基考核第一周任务总结与记录</title>
    <link href="/2022/11/20/%E8%88%9E%E5%9F%BA%E8%80%83%E6%A0%B8%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BB%BB%E5%8A%A1%E6%80%BB%E7%BB%93%E4%B8%8E%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/11/20/%E8%88%9E%E5%9F%BA%E8%80%83%E6%A0%B8%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BB%BB%E5%8A%A1%E6%80%BB%E7%BB%93%E4%B8%8E%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h3><p>​其实我参加舞基的考核不完全是为了进基地，我太菜了，走不了保研的路了，一方面是私心想实现高中时同门学长给我留下的关于机器人竞赛的小小梦想，另一方面是大创要学ros但是没人带我，我来蹭一蹭指导。考核我能做多少做多少，主要是最近时间太紧了，还是不善于应付考试，不想补考了，寄。</p><hr><h3 id="考核内容"><a href="#考核内容" class="headerlink" title="考核内容"></a>考核内容</h3><p>​第一周的说实话我都会，所以放在最后一晚上了。但是想让我从Ubuntu20换成18，现阶段想都别想（</p><h4 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h4><p><img src="E:\projects\robotbase\image-20221120220605941.png" alt="image-20221120220605941"></p><p>这是任务二截图。</p><h4 id="任务4"><a href="#任务4" class="headerlink" title="任务4"></a>任务4</h4><p>快排，好说。</p><p>以及对拍器，需要文件型的测试数据的话我学学怎么操作文件就完事。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数字逻辑设计实验二_报告参考和心得</title>
    <link href="/2022/11/17/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97/"/>
    <url>/2022/11/17/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>​啊，寄，又是超时提交。麻了，学到点东西就好，老子不卷保研了，老子把成绩拉到3.3润了，学成归来做自己喜欢的事。我是真滴头铁，明知道好好写作业不会有好报（在成绩上）。</p><p>​迟早把模糊音里的后鼻音全搞上，不设对我学会正确的拼音没有任何好处，只会拖慢我写作业的速度。</p><p>​忙炸的十一月和十二月。不忙的时候记得改鼠标宏，这什么垃圾快捷键，点一下给我删一堆代码。</p><p>​每回hexo -g的时候都要被tag后边的空格刺客卡一下。生气。</p><p>​寄，还得用魔法来deploy。烦内。</p><hr><h2 id="报告原文"><a href="#报告原文" class="headerlink" title="报告原文"></a>报告原文</h2><h1 id="数字逻辑设计实验二报告"><a href="#数字逻辑设计实验二报告" class="headerlink" title="数字逻辑设计实验二报告"></a>数字逻辑设计实验二报告</h1><p>2021302625赵钦林</p><hr><h2 id="2选1多路选择器"><a href="#2选1多路选择器" class="headerlink" title="2选1多路选择器"></a>2选1多路选择器</h2><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs verilog"> <span class="hljs-keyword">module</span> MUX2to1(w0,w1,s,f);<br><span class="hljs-keyword">input</span> w0,w1,s;<br><span class="hljs-keyword">output</span> f;<br><span class="hljs-keyword">reg</span> f;<br><span class="hljs-keyword">always</span> @(w0 <span class="hljs-keyword">or</span> w1 <span class="hljs-keyword">or</span> s)<br><span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span> (s ==<span class="hljs-number">0</span>)<br>         f = w0;<br>    <span class="hljs-keyword">else</span><br>         f = w1;<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="Testbench"><a href="#Testbench" class="headerlink" title="Testbench"></a>Testbench</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ps </span><br><span class="hljs-keyword">module</span> MUX2to1tb;<br>    <span class="hljs-keyword">reg</span> s_test;<br>    <span class="hljs-keyword">reg</span> w0_test;<br>    <span class="hljs-keyword">reg</span> w1_test;<br>    <span class="hljs-keyword">wire</span> f_test;<br><br>    <span class="hljs-keyword">initial</span> <span class="hljs-keyword">begin</span><br>        s_test = <span class="hljs-number">1&#x27;b0</span>;<br>        w0_test = <span class="hljs-number">1&#x27;b0</span>;<br>        w1_test = <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">40</span> s_test=~s_test;<br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">20</span> w0_test=~w0_test;<br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">10</span> w1_test=~w1_test;<br>    MUX2to1 MUX2to1(<span class="hljs-variable">.s</span>(s_test),<span class="hljs-variable">.w0</span>(w0_test),<span class="hljs-variable">.w1</span>(w1_test),<span class="hljs-variable">.f</span>(f_test));<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="仿真波形"><a href="#仿真波形" class="headerlink" title="仿真波形"></a>仿真波形</h3><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps1.jpg" alt="img"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>s&#x3D;0的时候，选择w0；s&#x3D;1的时候，选择w1。本实验最简单的电路了。</p><img src="数字逻辑设计实验二-报告参考和心得\image-20221117203635499.png" alt="image-20221117203635499" style="zoom: 33%;" /><hr><h2 id="2-4译码器"><a href="#2-4译码器" class="headerlink" title="2-4译码器"></a>2-4译码器</h2><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> decoder2to4(w0,w1,en,y0,y1,y2,y3);<br><span class="hljs-keyword">input</span> w0,w1,en;<br><span class="hljs-keyword">output</span> y0,y1,y2,y3;<br><span class="hljs-keyword">reg</span> y0,y1,y2,y3;<br><span class="hljs-keyword">always</span> @(w0 <span class="hljs-keyword">or</span> w1 <span class="hljs-keyword">or</span> en)<br><span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(en==<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">begin</span><br>        <span class="hljs-keyword">if</span>(w0==<span class="hljs-number">0</span> &amp;&amp; w1==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">begin</span><br>            y0=<span class="hljs-number">1</span>;<br>            y1=<span class="hljs-number">0</span>;<br>            y2=<span class="hljs-number">0</span>;<br>            y3=<span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">end</span><br>         <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w0==<span class="hljs-number">1</span> &amp;&amp; w1==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">begin</span><br>            y0=<span class="hljs-number">0</span>;<br>            y1=<span class="hljs-number">1</span>;<br>            y2=<span class="hljs-number">0</span>;<br>            y3=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w0==<span class="hljs-number">0</span> &amp;&amp; w1==<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">begin</span><br>            y0=<span class="hljs-number">0</span>;<br>            y1=<span class="hljs-number">0</span>;<br>            y2=<span class="hljs-number">1</span>;<br>            y3=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(w0==<span class="hljs-number">1</span> &amp;&amp; w1==<span class="hljs-number">01</span>)<br>        <span class="hljs-keyword">begin</span><br>            y0=<span class="hljs-number">0</span>;<br>            y1=<span class="hljs-number">0</span>;<br>            y2=<span class="hljs-number">0</span>;<br>            y3=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">begin</span><br>            y0=<span class="hljs-number">0</span>;<br>            y1=<span class="hljs-number">0</span>;<br>            y2=<span class="hljs-number">0</span>;<br>            y3=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">begin</span><br>        y0=<span class="hljs-number">0</span>;<br>        y1=<span class="hljs-number">0</span>;<br>        y2=<span class="hljs-number">0</span>;<br>        y3=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="Testbench-1"><a href="#Testbench-1" class="headerlink" title="Testbench"></a>Testbench</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ps </span><br><span class="hljs-keyword">module</span> decoder2to4tb;<br>    <span class="hljs-keyword">reg</span> en_test;<br>    <span class="hljs-keyword">reg</span> w0_test;<br>    <span class="hljs-keyword">reg</span> w1_test;<br>    <span class="hljs-keyword">wire</span> y0_test;<br>    <span class="hljs-keyword">wire</span> y1_test;<br>    <span class="hljs-keyword">wire</span> y2_test;<br>    <span class="hljs-keyword">wire</span> y3_test;<br><br><br>    <span class="hljs-keyword">initial</span> <span class="hljs-keyword">begin</span><br>        en_test = <span class="hljs-number">1&#x27;b0</span>;<br>        w0_test = <span class="hljs-number">1&#x27;b0</span>;<br>        w1_test = <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">40</span> en_test=~en_test;<br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">20</span> w0_test=~w0_test;<br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">10</span> w1_test=~w1_test;<br>    decoder2to4 decoder2to4(<span class="hljs-variable">.en</span>(en_test),<span class="hljs-variable">.w0</span>(w0_test),<span class="hljs-variable">.w1</span>(w1_test),<span class="hljs-variable">.y0</span>(y0_test),<span class="hljs-variable">.y1</span>(y1_test),<span class="hljs-variable">.y2</span>(y2_test),<span class="hljs-variable">.y3</span>(y3_test));<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="波形"><a href="#波形" class="headerlink" title="波形"></a>波形</h3><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps2.jpg" alt="img"></p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><img src="数字逻辑设计实验二-报告参考和心得\image-20221117204026119.png" alt="image-20221117204026119" style="zoom:33%;" /><p>写报告时回顾这一段代码，其实把w1，w0合并成 [1:0]w 的向量，会更直观一点，是两位的二进制数，代表选择了第w位输出1.</p><hr><h2 id="8-3编码器"><a href="#8-3编码器" class="headerlink" title="8-3编码器"></a>8-3编码器</h2><h3 id="源代码-2"><a href="#源代码-2" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> encoder8to3(w,y);<br><span class="hljs-keyword">input</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>] w;<br><span class="hljs-keyword">output</span> <span class="hljs-keyword">reg</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>] y;<br><span class="hljs-keyword">always</span> @( w <span class="hljs-keyword">or</span> y)<br><span class="hljs-keyword">begin</span><br>    y[<span class="hljs-number">2</span>]= w[<span class="hljs-number">4</span>]+ w[<span class="hljs-number">5</span>]+w[<span class="hljs-number">6</span>]+w[<span class="hljs-number">7</span>];<br>    y[<span class="hljs-number">1</span>]= w[<span class="hljs-number">2</span>]+ w[<span class="hljs-number">3</span>]+w[<span class="hljs-number">6</span>]+w[<span class="hljs-number">7</span>];<br>    y[<span class="hljs-number">0</span>]= w[<span class="hljs-number">1</span>]+ w[<span class="hljs-number">3</span>]+w[<span class="hljs-number">5</span>]+w[<span class="hljs-number">7</span>];<br><span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="Testbench-2"><a href="#Testbench-2" class="headerlink" title="Testbench"></a>Testbench</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ps </span><br><span class="hljs-keyword">module</span> encoder8to3tb;<br>    <span class="hljs-keyword">reg</span> [<span class="hljs-number">7</span>:<span class="hljs-number">0</span>]w_test;<br>    <span class="hljs-keyword">wire</span> [<span class="hljs-number">2</span>:<span class="hljs-number">0</span>]y_test;<br><span class="hljs-keyword">initial</span><br><span class="hljs-keyword">begin</span><br>    w_test = <span class="hljs-number">8&#x27;b00000001</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00000010</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00000100</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00001000</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00010000</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00100000</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b01000000</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b10000000</span>;<br>    #<span class="hljs-number">40</span><br>    w_test = <span class="hljs-number">8&#x27;b00000000</span>;<br><span class="hljs-keyword">end</span><br><br>    encoder8to3 encoder8to3t(<span class="hljs-variable">.w</span>(w_test),<span class="hljs-variable">.y</span>(y_test));<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="波形-1"><a href="#波形-1" class="headerlink" title="波形"></a>波形</h3><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps3.jpg" alt="img"></p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><img src="数字逻辑设计实验二-报告参考和心得\image-20221117204341220.png" alt="image-20221117204341220" style="zoom:33%;" /><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cimage-20221117204353601.png" alt="1"></p><p>​波形与真值表一致。</p><p>​我的代码采用了来自课本的总结，这个语句真是令人拍案叫绝！</p><hr><h2 id="1位二进制比较器"><a href="#1位二进制比较器" class="headerlink" title="1位二进制比较器"></a>1位二进制比较器</h2><h3 id="源代码-3"><a href="#源代码-3" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> compare(X,Y,XGY,XSY,XEY);<br><span class="hljs-keyword">input</span> X,Y;<br><span class="hljs-keyword">output</span> XGY,XSY,XEY;<br><span class="hljs-keyword">reg</span> XGY,XSY,XEY;<br><br><span class="hljs-keyword">always</span>@(X <span class="hljs-keyword">or</span> Y)<br><span class="hljs-keyword">begin</span><br>    <span class="hljs-keyword">if</span>(X==Y)<br>        XEY = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        XEY = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (X&gt;Y)<br>        XGY = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        XGY= <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(X &lt; Y)<br>        XSY = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        XSY = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="Testbench-3"><a href="#Testbench-3" class="headerlink" title="Testbench"></a>Testbench</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ps </span><br><span class="hljs-keyword">module</span> comparetb;<br>    <span class="hljs-keyword">reg</span> X_test;<br>    <span class="hljs-keyword">reg</span> Y_test;<br>    <span class="hljs-keyword">wire</span> XEY_test;<br>    <span class="hljs-keyword">wire</span> XGY_test;<br>    <span class="hljs-keyword">wire</span> XSY_test;<br><br>    <span class="hljs-keyword">initial</span> <span class="hljs-keyword">begin</span><br>        X_test = <span class="hljs-number">1&#x27;b0</span>;<br>        Y_test = <span class="hljs-number">1&#x27;b0</span>;<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">40</span> X_test=~X_test;<br>    <span class="hljs-keyword">always</span> #<span class="hljs-number">20</span> Y_test=~Y_test;<br><br>compare  compare (<span class="hljs-variable">.X</span>(X_test),<span class="hljs-variable">.Y</span>(Y_test),<span class="hljs-variable">.XEY</span>(XEY_test),<span class="hljs-variable">.XGY</span>(XGY_test),<span class="hljs-variable">.XSY</span>(XSY_test));<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="波形-2"><a href="#波形-2" class="headerlink" title="波形"></a>波形</h3><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps4.jpg" alt="img"></p><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>​我采用了《夏宇闻数字系统设计实例教程》的设计：</p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cimage-20221117204812693.png" alt="image-20221117204812693"></p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cimage-20221117204829758.png" alt="image-20221117204829758"></p><p>​波形所示与表中一致。</p><p>​布尔表达式如下：</p><p>(X &gt; Y) &#x3D; X·(~ Y) </p><p>(X &lt; Y) &#x3D; ( ~ X)·Y </p><p>(X &#x3D; Y) &#x3D; (<del>X) ·(</del>Y) + X·Y </p><hr><h2 id="2-2位简单全加器"><a href="#2-2位简单全加器" class="headerlink" title="2+2位简单全加器"></a>2+2位简单全加器</h2><h3 id="源代码-4"><a href="#源代码-4" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">module</span> fulladder2bit(carryin,x,y,S,carryout);<br><span class="hljs-keyword">input</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>] x,y;<br><span class="hljs-keyword">input</span> carryin;<br><span class="hljs-keyword">output</span> carryout;<br><span class="hljs-keyword">output</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>] S;<br><span class="hljs-keyword">wire</span> c ;<br>    fulladder stage0(carryin,x[<span class="hljs-number">0</span>],y[<span class="hljs-number">0</span>],S[<span class="hljs-number">0</span>],c);<br>    fulladder stage1(c,x[<span class="hljs-number">1</span>],y[<span class="hljs-number">1</span>],S[<span class="hljs-number">1</span>],carryout);<br><br><span class="hljs-keyword">endmodule</span><br><br><span class="hljs-keyword">module</span> fulladder (<br>    Cin,x,y,s,Cout<br>);<br>    <span class="hljs-keyword">input</span> Cin,x,y;<br>    <span class="hljs-keyword">output</span> s,Cout;<br>    <span class="hljs-keyword">assign</span> s = x^y^Cin;<br>    <span class="hljs-keyword">assign</span> Cout = (x &amp; y)|(x&amp; Cin)|(y &amp; Cin);<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="Testbench-4"><a href="#Testbench-4" class="headerlink" title="Testbench"></a>Testbench</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ps</span><br><span class="hljs-keyword">module</span> fulladder2bit_tb;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>]X_test;<br><span class="hljs-keyword">reg</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>]Y_test;<br><span class="hljs-keyword">reg</span> carryin_test;<br><span class="hljs-keyword">wire</span> [<span class="hljs-number">1</span>:<span class="hljs-number">0</span>]S_test;<br><span class="hljs-keyword">wire</span> carryout_test;<br><span class="hljs-keyword">initial</span><br>carryin_test=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">always</span> #<span class="hljs-number">10</span> carryin_test=~carryin_test;<br><span class="hljs-keyword">initial</span><br><span class="hljs-keyword">begin</span><br>X_test=<span class="hljs-number">2&#x27;b00</span>;<br>Y_test=<span class="hljs-number">2&#x27;b00</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b01</span>;<br>Y_test=<span class="hljs-number">2&#x27;b00</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b10</span>;<br>Y_test=<span class="hljs-number">2&#x27;b00</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b11</span>;<br>Y_test=<span class="hljs-number">2&#x27;b00</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b00</span>;<br>Y_test=<span class="hljs-number">2&#x27;b01</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b01</span>;<br>Y_test=<span class="hljs-number">2&#x27;b01</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b10</span>;<br>Y_test=<span class="hljs-number">2&#x27;b01</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b11</span>;<br>Y_test=<span class="hljs-number">2&#x27;b01</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b00</span>;<br>Y_test=<span class="hljs-number">2&#x27;b10</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b01</span>;<br>Y_test=<span class="hljs-number">2&#x27;b10</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b10</span>;<br>Y_test=<span class="hljs-number">2&#x27;b10</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b11</span>;<br>Y_test=<span class="hljs-number">2&#x27;b10</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b00</span>;<br>Y_test=<span class="hljs-number">2&#x27;b11</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b01</span>;<br>Y_test=<span class="hljs-number">2&#x27;b11</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b10</span>;<br>Y_test=<span class="hljs-number">2&#x27;b11</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b11</span>;<br>Y_test=<span class="hljs-number">2&#x27;b11</span>;<br>#<span class="hljs-number">20</span><br>X_test=<span class="hljs-number">2&#x27;b11</span>;<br>Y_test=<span class="hljs-number">2&#x27;b11</span>;<br><span class="hljs-keyword">end</span><br>fulladder2bit fulladder2bit(<span class="hljs-variable">.carryin</span>(carryin_test),<span class="hljs-variable">.x</span>(X_test),<span class="hljs-variable">.y</span>(Y_test),<span class="hljs-variable">.S</span>(S_test),<span class="hljs-variable">.carryout</span>(carryout_test));<br><span class="hljs-keyword">endmodule</span><br></code></pre></td></tr></table></figure><h3 id="波形-3"><a href="#波形-3" class="headerlink" title="波形"></a>波形</h3><img src="数字逻辑设计实验二-报告参考和心得\wps11.jpg" alt="img" style="zoom:150%;" /><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>​采用行波进位加法器的思想，先实现一位的fulladder，然后组合成2+2位的加法器。</p><p>​波形中，carryout和[1:0]S一起组成了三位二进制数，与预期功能符合。</p><hr><h2 id="Verilog-和高级编程语言的区别"><a href="#Verilog-和高级编程语言的区别" class="headerlink" title="Verilog 和高级编程语言的区别"></a>Verilog 和高级编程语言的区别</h2><p>Verilog是面向硬件的语言，是描述性语言，在写verilog代码时要做到心中有电路；学习的时候语法比较简单，难在对电路的思考上。</p><p>高级编程语言是一行一行执行的，verilog则有时序的概念，是并行的。</p><hr><h2 id="实验心得"><a href="#实验心得" class="headerlink" title="实验心得"></a>实验心得</h2><h3 id="一些实验过程中出现的小插曲"><a href="#一些实验过程中出现的小插曲" class="headerlink" title="一些实验过程中出现的小插曲"></a>一些实验过程中出现的小插曲</h3><ol><li><p>忘记给tb的模块改名，模块重名导致下图报错：<img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps6.jpg" alt="img"></p><p>差不多是无限循环引用（报错是51次）</p></li><li><p>代码中光if-else不能运行，加了always语句才能跑</p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps7.jpg" alt="img"></p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps8.jpg" alt="img"></p></li><li><p>开头的ports列表要把input和output都写全</p></li><li><p>在试图用循环写testbench的时候，某个end前面的单独的#40导致报错unexpected end</p></li><li><p>本质是拼写错误（integer-&gt;integar），但是vscode的verilog插件没给我识别出来，我以为是赋值的问题</p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps9.jpg" alt="img"></p><p><img src="/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E6%8A%A5%E5%91%8A%E5%8F%82%E8%80%83%E5%92%8C%E5%BF%83%E5%BE%97%5Cwps10.jpg" alt="img"></p></li><li><p>时间没把握好，困难比我想象中的多很多，过了20：00的ddl反而心态缓和下来了，于是好好写完了报告才交上去。</p></li></ol><h3 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h3><p>​水平不够，尝试运用没有完全掌握的知识，简直是灾难。简直就像我的高中老师所言：“给你一把倚天剑屠龙刀，还没拿出去炫耀，就不小心伤到了自己”。好在试图用一些刚学的verilog语法（尤其是循环写testbench）就算不熟练，也只会多花些时间，但是写的过程也是学习、熟练的过程，学会了尤其感到心情舒畅，也许某天我能在同学面前自豪地“耍花刀”。</p><p>​可惜十一月考试超级多，快忙炸了。我自己能看到按时间顺序来我的代码结构的变化，我慢慢掌握了一些技巧，比如用向量输入输出，循环，可惜没有时间去重构了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随记</tag>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些规划</title>
    <link href="/2022/11/16/%E4%B8%80%E4%BA%9B%E8%A7%84%E5%88%92/"/>
    <url>/2022/11/16/%E4%B8%80%E4%BA%9B%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p>想进基地，考核不难，但是好忙好忙好忙<br>想玩服务器，但是好忙好忙好忙<br>想准备六级+明年的雅思，但是好忙好忙好忙<br>想参加瓜大复原项目，但是好忙好忙好忙<br>想刷算法题，但是好忙好忙好忙<br>想玩NAS，但是好忙好忙好忙<br>想去仔细了解某校3+1项目，但是好忙好忙好忙<br>先把复变真题写完再说吧，寄</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>折腾内网穿透+串流</title>
    <link href="/2022/11/13/%E6%8A%98%E8%85%BE%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-%E4%B8%B2%E6%B5%81/"/>
    <url>/2022/11/13/%E6%8A%98%E8%85%BE%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-%E4%B8%B2%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h2 id="Zerotier"><a href="#Zerotier" class="headerlink" title="Zerotier"></a>Zerotier</h2><p>知乎都有介绍，不多说了。有点怕瓜约谈我，据说没事，那继续搞。</p><p>​想用白嫖的阿里云2核4G搭planet服务器，昨晚试了windows+docker，结果docker闪退，以为还是硬件太差。</p><p>​然后试了两位大佬的脚本，昨天都失败了。linux端docker还是不行。写到这里我刚成功运行了又一位大佬的一键运行脚本，这回不是docker应该没问题了。本来心灰意冷，moon就moon吧，好歹能加一点速。现在我又行了！</p><p><del>最后成功的教程：</del></p><p><a href="https://zhuanlan.zhihu.com/p/544807922">https://zhuanlan.zhihu.com/p/544807922</a></p><p>不明白到底哪一步出问题了。寒假再说（</p><p>现在准备考试好忙啊啊啊啊啊啊啊啊啊啊</p><hr><h2 id="Moonlight"><a href="#Moonlight" class="headerlink" title="Moonlight"></a>Moonlight</h2><p>​很久以前按照教程成功了，局域网内可打原神（</p>]]></content>
    
    
    
    <tags>
      
      <tag>随记</tag>
      
      <tag>内网穿透</tag>
      
      <tag>Zerotier</tag>
      
      <tag>Moonlight</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客搭建随记</title>
    <link href="/2022/11/12/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%9A%8F%E8%AE%B0/"/>
    <url>/2022/11/12/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%9A%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>​终于把新博客搭起来了，旧的一年也没有写多少，备份花了两块钱，血亏。折腾不动主题了，就这样吧，简单一点也挺好。以后写写日记，写写学习笔记，也许能拿出来复习&#x2F;给学弟学妹看。</p><p>​白嫖的2核4g突然不知道该怎么用了，在搭服务器？没人和我玩，瓜服已经够我和几位老朋友整活了。</p><p>​休息一下，快点去复习吧！</p><p>11.17</p><p>寄，报告里的图片显示不了。</p><p><a href="https://blog.csdn.net/weixin_42030522/article/details/123075824">https://blog.csdn.net/weixin_42030522/article/details/123075824</a></p><p>用阿里云？疯了，那么贵，过期后备份旧博客内容还花了我两块。</p><p>不好搞，图片先不管了，至少从wps的缓存里保存到source里了。下次有时间再搞。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
